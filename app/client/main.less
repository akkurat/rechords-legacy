@import "./responsive.import.less";
@import "./variables.import.less";
// Resets
ul {
  padding-left: 0;
  list-style-type: none;
}

ol {
  padding-left: 1em;
}

a {
  text-decoration: none;
  color: inherit;
  font-weight: inherit;
}

button,
input,
select,
textarea {
  font: inherit;
  border-style: none;
  color: inherit;
  background-color: inherit;
  text-align: inherit;
  margin: 0;
  padding: 0;
}

button {
  cursor: pointer;
}

textarea {
  display: block;
  width: 100%;
}

// Global Variables moved to variables.import.less

// sizes moved to responsive.import.less

// Color Schemes

.list-colors {
  color: hsv(hsvhue(@accent), 0.2, 0.4);
  background-color: @light;
  scrollbar-color: fade(white, 50%) transparent;
}

.chordsheet-colors {
  h1 {
    color: @accent;
  }

  color: black; // for aside only, is overridden in #chordsheet
  background-color: white;
  scrollbar-color: fade(black, 15%) transparent;
}

.source-colors {
  h1 {
    color: white;
  }
  color: fade(white, 70%);
  background-color: hsv(hsvhue(@accent), 0.7, 0.8);
  scrollbar-color: fade(black, 15%) transparent;

  textarea {
    color: black;
  }
}

.revision-colors {
  // ie. a particular revision
  color: hsv(hsvhue(@accent), 0.4, 0.8);
  background-color: hsv(hsvhue(@accent), 0.7, 0.4);
}

.revisions-colors {
  // ie. the list of revisions
  color: hsv(hsvhue(@accent), 0.3, 0.7);
  background-color: hsv(hsvhue(@accent), 0.5, 0.2);
}

// Base Layout

html {
  height: 100%;
}

body {
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
  overflow: hidden;

  .select(none);

  font-family: "Roboto", Helvetica, Arial, sans-serif;
  font-size: 18px;
  background-color: grey;
}

#app {
  display: contents;
}

#body {
  display: flex;
  width: 100%;
  height: 100%;
}

.content {
  box-sizing: border-box;
  min-height: 100vh;

  .scroll;

  width: 100%;
  padding: 1em 2em 1em 2em;

  h1:first-child,
  h2:first-child {
    margin-top: 0;

    & + h2 {
      margin-top: 0;
    }
  }
}


@drawer-open: 220px;
@drawer-closed: 30px;

aside.drawer {
  flex-grow: 0;
  flex-shrink: 0;
  box-sizing: border-box;
  width: @drawer-open;

  .scroll;

  padding-top: 1em;
  padding-right: 0;
  padding-bottom: 2em;
  padding-left: 0.5em;

  &.closed {
    width: @drawer-closed;
    padding-left: @drawer-closed;
    cursor: pointer;
    transition: all 0.3s;
    z-index: 100;
    box-sizing: border-box;

    // Mitigates the rendering bug of the contained .label
    position: relative;

    &:hover {
      width: @drawer-open;
      padding-left: 0.5em;
    }
  }

  .phone({
    width: 100%; 
    min-height: 100%; 

    &.closed {
      display: none;
    }
  });

  // Content-width blocker:
  & > div {
    width: @drawer-open - @drawer-closed; //ie. width - padding
  }

  // Drawer Contents:
  h1, h2, h3 {
    font-size: 2em;
    font-weight: 600;
  }

  & > h1 {
    margin-top: 0;
  }

  h2 {
    font-size: 1em;
    margin-bottom: 0;
    color: mix(@accent, @warm, 80%);
  }

  h2.huge {
    margin-top: 0;
    font-size: 2em;
    margin-left: -0.05em;
  }
}


// dot. wohin?
#dirty {
  display: block;
  position: absolute;
  font-size: 1em;
  width: 1em;
  height: 1em;
  border-radius: 1em;
  background-color: @accent;
  left: 5.9rem;
  top: 3.7rem;
}

// Special content
#logo * {
  font-size: 15em;
  margin: 0;
  line-height: 0.8em;
}

.tags {
  li {
    display: inline-block;
    font-size: 0.75em;
    line-height: 1.7em;
    font-weight: 600;
    text-transform: uppercase;
    background-color: @warm;
    color: white;
    border-radius: 0.4em;
    padding: 0 0.5em;
    margin-right: 0.5em;

    &::before {
      content: none;
    }

    b {
      display: inline-block;
      font-weight: inherit;
      padding: 0 0.5em;
      margin: 0 -0.5em;
      margin-left: 0.3em;
      background-color: @accent;
      border-top-right-radius: inherit;
      border-bottom-right-radius: inherit;
    }
  }
}

div.mobile-footer {
  display: none;

  .phone({display: block;});
}


// Content elements

#chordsheet {
  .chordsheet-colors;

  // padding-top: 2em;
  // padding-bottom: 10em;
  // padding-left: 6em;

  color: @dull;

  .phone({
    font-size: 0.9em; 
    padding-left: 1em;
  });

  .phone-tablet({
    .scroll;
  });

  

  h2, h3, h4 {
    color: black;
  }

  h1, h2 {
    margin-bottom: 1rem;
    font-size: 2.4em;
    display: inline-block;
  }

  h1 {
    margin-right: 0.5em;
    margin-left: -0.1em;
  }

  h3 {
    font-size: 1em;
    margin: 0;

    height: 3em;
    line-height: 2em;
    margin-bottom: -4em;

    text-align: right;
    width: 5em;
    margin-left: -6em;

    .phone({
      margin: 2em 0 0; 
      width: auto; 
      height: auto; 
      line-height: 1em; 
      text-align: left;
    });
  }

  // Verse container
  p {
    margin: 1.4em 0;
  }

  h4 {
    margin-top: 2em;
    margin-bottom: -0.5em;
  }

  a {
    color: @accent;

    &:hover {
      text-decoration: underline;
    }
  }

  img {
    width: 100%;
  }

  .ref {
    color: black;
    font-weight: bold;
    padding-left: 8px;
    margin-left: -12px;
    border-left: 4px solid @accent;
    margin-top: 2em;
    margin-bottom: 2em;
    cursor: pointer;
  }

  .inlineReference {
    &.shown {
      animation-name: slide-down;
      animation-duration: 1s;
      animation-direction: normal;
      animation-timing-function: ease-in-out;
    }

    &.hidden {
      display: none;
    }
  }

  @keyframes slide-down {
    0% {
      opacity: 0;
      transform: translateY(-100%);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  code {
    display: inline-block;
    font-family: "Input Mono", Courier New, Courier, monospace;
    font-size: 0.9em;
    font-weight: 300;
    padding: 0 0.5em;
    border-radius: 0.4em;
    line-height: 1.5em;
    color: white;
    background-color: fade(@dull, 70%);
  }

  pre code {
    // used for preformatted strumming patterns
    font-size: 1em;
    background-color: transparent;
    color: inherit;
    line-height: inherit;
  }

  &.interactive i {
    cursor: pointer;

    &:not(.hasChord):hover {
      border-top: 2px solid @accent;
      margin-top: -2px;
    }
  }

  @continuation_pad: 0.8em; // indent for wrapping rows

  .line {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-items: flex-end;
    min-height: 1em;
    padding-left: @continuation_pad;
    white-space: pre-wrap;
  }

  .line i {
    font-style: normal;
    font-weight: 400;
    color: black;

    flex-direction: column;
    display: flex;

    // @media all and (-webkit-min-device-pixel-ratio:0) and (min-resolution: .001dpcm) {
    //   // Only for non-webkit browser: Hanging indents for rows without chords.
    //   // Does not work for webkit as negative first-line indent is handled differently for contained flex-elements.
    //   text-indent: -@continuation_pad;
    //   padding-left: @continuation_pad;
    // }

    &:first-child {
      margin-left: -@continuation_pad;
    }

    /* currently not in use: Both Viewer and Preview have preprocessors.
    &::before {
      content: attr(data-chord);
      .before();
    }
    */

    .before {
      // aka. Chords.

      color: @accent;
      font-weight: 600;
      font-style: normal;

      .select(none);
      .noFocusBorder;

      margin-top: 0;
      margin-right: 0.5em;
      margin-bottom: -0.3em;

      sup {
        vertical-align: 0.4em;
        font-size: 0.7em;
        letter-spacing: 0.02em;
        padding-left: 0.1em;
        font-weight: 700;
      }

      &:focus {
        background-color: hsv(hsvhue(@accent), 0.1, 0.95);
        min-width: 1.5em;

        &:empty:before {
          content: "\feff"; // Patches height rendering of empty contenteditables
        }
      }

      &.optional {
        color: hsv(hsvhue(@accent), 0.3, 0.7);
        &:before {
          content: "(";
        }
        &:after {
          content: ")";
        }
        &:after,
        &:before {
          font-weight: 200;
          vertical-align: 0.05em;
        }
      }
    } // before aka. chords
  } // i

  &.interactive .line i .before {
    // Re-allow chord text selection when editing.
    .select(text);
  }

  li {
    line-height: 1.6em;
    list-style-type: none;

    &::before {
      content: "â€“";
      display: inline-block;
      position: relative;
      width: 0;
      left: -1.2em;
    }
  }
} // .chordsheet

input {
  position: fixed;
}
// It should be also possible to override this manually
#chordSheetContent {

  height: 100%;
  overflow: show;
  // set in react!
  // column-width: 10rem; 
  column-fill: auto;
  .phone-tablet( {
    column-count: 1;
    column-width: unset !important;
    height: auto;
  });

  section {
    display: contents;
  }

  p {
    break-inside: avoid;
    // break-before: avoid;
  }

  span.line {
    break-inside: avoid;
    break-before: avoid;
  }

  #head,
  .span-wrapper {
    column-span: 2;
  }

  h3 {
    break-after : avoid;
    break-before: always;
  }
  div.ref {
    break-before: always;
    break-after: avoid;
  }
}

#progress {
  .chordsheet-colors;

  table {
    border-collapse: collapse;
    border-spacing: 0;
    width: 100%;
  }

  thead {
    text-align: left;
  }

  tbody tr:nth-child(odd) {
    background-color: fade(@light, 30%);
  }

  td,
  th {
    padding: 0.1em 0.5em 0.1em 0.5em;

    max-width: 8em;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
}


aside.drawer#list {
  padding-left: 0; // undo left padding, since this box contains no immediate content

  .list-colors;

  &.hidden {
    display: none;
  }

  > div {
    padding-top: 1em;
    width: auto;

    > ul {
      padding-left: 0.5em;
    }
  }

  .filter {
    position: absolute;
    left: 0;
    top: 0;
    width: @drawer-open;

    .phone({position: static; width: 100%;});

    display: flex;

    color: white;
    background-color: @light;

    .reset {
      flex: 0 0 1.5em;
      font-size: 1.4em;
      margin-left: -1.5em;
      cursor: pointer;
      margin-top: 1rem;

      display: none;

      &.filled {
        display: block;
      }
    }

    input {
      margin-top: 1rem;
      padding-left: 0.5em;
      height: 2em;

      display: block;
      flex: 1 1 auto;

      .noFocusBorder;

      transition: color, background-color 0.5s;

      background-color: @warm;
      &::placeholder {
        color: transparent;
      }

      &[value=""] {
        background-color: @light;
        &::placeholder {
          color: hsv(hsvhue(@accent), 0.2, 0.4);
        }
      }

      &:focus {
        background-color: @warm;
        &::placeholder {
          color: fade(white, 50%);
        }
      }
    }
  }

  div.filterMenu {
    position: absolute;
    left: @drawer-open;
    right: 0;
    top: 0;
    z-index: 1;

    overflow: hidden;

    padding-top: 0.5em;
    padding-left: 2em;
    padding-bottom: 1.5em;

    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-content: flex-start;
    z-index: 1;

    .phone({position: static; width: 100%; padding-left: 0.5em;});

    -webkit-backdrop-filter: blur(10px);
    background-color: fade(@light, 60%);

    @media all and (-webkit-min-device-pixel-ratio: 0) and (min-resolution: 0.001dpcm) {
      // non-webkit-browsers
      background-color: mix(@light, white);
    }

    div.taggroup {
      margin-right: 20px;
    }

    h1,
    h2 {
      display: none;
    }

    h4 {
      color: black;
      display: block;
      transform-origin: left;
      font-weight: 600;
      transform: rotate(-14deg);
    }

    ul {
      margin-left: 0.5em;
      flex: 0 0 7em;
      display: flex;
      flex-direction: column;
    }

    li {
      display: inline-table;
      color: white;
      margin-bottom: 0.5em;
      transform-origin: left;
      transform: rotate(-14deg);
      cursor: pointer;

      &:hover {
        background-color: black;
      }

      b {
        width: 1em;
      }
    }

    max-height: 800px; // enables max-height-transition

    &.hidden {
      opacity: 0;
      visibility: hidden;

      .phone(
        {opacity: inherit; visibility: visible; max-height: 0; padding-top: 0; padding-bottom:
          0;}
      );
    }

    opacity: 1;
    transition: all 0.5s;
  }

  // Make list items fill the entire width

  li {
    // Stick to one row per li
    white-space: nowrap;
    overflow: hidden;

    margin-left: -0.5em;
    padding-left: 0.5em;

    a {
      display: flex;

      .noFocusBorder;

      padding-top: 0.1em;
      padding-bottom: 0.2em;
      padding-left: 0.5em;
      padding-right: 1em;
      margin-left: -0.5em;
      margin-right: -0.5em;

      span {
        display: inline-block;
        box-sizing: border-box;
        min-width: 0;
        text-overflow: ellipsis;
        overflow: hidden;
      }

      .author {
        display: none;
        flex: 1 0 0;
        color: hsv(hsvhue(@accent), 0.8, 0.8);
        background-color: @light;
        text-align: right;
        direction: rtl;
        overflow: hidden;
      }

      &:hover {
        .title {
          flex: 1 0 0;
        }

        .author {
          display: inline-block;
          flex: 0 0 auto;
          color: @accent;
        }
      }

      &.selected {
        color: white;
        background-color: @warm;

        .author {
          color: white;
          background-color: @warm;
        }
      }
    }
  }
} // .drawer#list

aside.drawer#revs {
  ol {
    list-style-type: lower-greek;

    li {
      font-size: 0.8em;
      padding: 0.3em;

      &:hover {
        background-color: hsva(0, 0, 0, 0.3);
      }

      &.active {
        background-color: hsva(0, 0, 0, 0.5);
      }
    }
  }
}

.content {
  box-sizing: border-box;
  min-height: 100vh;

  .scroll;

  width: 100%;
  height: 100%;
  padding: 1em 2em 1em 2em;

  h1:first-child,
  h2:first-child {
    margin-top: 0;

    &+h2{
      margin-top: 0;
    }
  }
}

textarea {
  font-family: "Input Mono", Courier New, Courier, monospace;
  font-weight: 300;
  font-size: 0.9em;
  width: inherit;
  cursor: text;

  .noFocusBorder;
}

.noFocusBorder {
  &:focus {
    outline: none;
  }

  &::selection {
    color: hsv(hsvhue(@accent), 0.4, 0.8);
    background-color: hsva(hsvhue(@accent), 0.3, 0.3, 1);
  }

  &::-moz-selection {
    color: hsv(hsvhue(@accent), 0.8, 0.3);
    background-color: hsv(hsvhue(@accent), 0.5, 0.9);
  }
}

hr {
  border-style: solid;
  margin-bottom: 1em;
}

.label {
  font-weight: bold;
  font-size: 1.2em;
  text-transform: uppercase;
  background-color: inherit;

  display: block;
  padding: 0.2em;
  position: fixed;
  bottom: 1em;
}

// CSS-wise transparent container to satisfy react.
// TODO: remove all of them.
.container {
  display: contents;
}

// Editor.jsx
// TODO: attach at jsx level?
#editor {
  display: flex;
  width: 100%;

  textarea {
    white-space: pre;
  }
}

#transposer {
  .phone({
    display: none;
  });

  height: 400px;
  float: right;

  .rc-slider {
    width: 0px;
  }

  .rc-slider-mark {
    top: 2px;
    left: -60px;
  }

  .rc-slider-mark-text {
    width: 50px;
    text-align: right;
  }

  .rc-slider-track {
    background-color: @accent;
  }

  .rc-slider-handle,
  .rc-slider-dot-active {
    border-color: @accent;
  }
}

.select(@mode: none;) {
  -webkit-touch-callout: @mode; /* iOS Safari */
    -webkit-user-select: @mode; /* Safari */
     -khtml-user-select: @mode; /* Konqueror HTML */
       -moz-user-select: @mode; /* Firefox */
        -ms-user-select: @mode; /* Internet Explorer/Edge */
            user-select: @mode; /* Non-prefixed version, currently supported by Chrome and Opera */
}

.scroll {
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  scrollbar-width: thin;
}
