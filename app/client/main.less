@import './variables.import.less';
// Why can I include it here but not in the jsx?
@import '../imports/ui/collapsed.less';

// Resets
ul {
  padding-left: 0;
}

a {
  text-decoration: none;
}

button,
input,
select,
textarea {
  font            : inherit;
  border-style    : none;
  color           : inherit;
  background-color: inherit;
  text-align      : inherit;
  margin          : 0;
  padding         : 0;
}

button {
  cursor: pointer;
}

textarea {
  display: block;
  width  : 100%;
}

@light: hsv(hsvhue(@accent), 0.05, 0.9);
@dull: hsv(hsvhue(@accent), 0.3, 0.7);
@warm: hsv(hsvhue(@accent), 0.2, 0.6);

// Layout
html {
  height: 100%;
}

body {
  margin : 0;
  padding: 0;
  height : 100%;
  width  : 100%;
  overflow: hidden;
  position: fixed;

  .select(none);

  font-size       : 18px;

  // .maxwidth(@width-m, {
  //   font-size       : 25px;
  // });

  // .maxwidth(@width-s, {
  //   font-size       : 30px;
  // });

}

#body {
  flex-direction: row;
  .maxwidth(@width-s, {
    flex-direction: column;
  });
  display       : flex;
  width         : 100%;
  height        : 100%;

  font-family     : 'Roboto', Helvetica, Arial, sans-serif;
  background-color: grey;
  overflow: visible;

  padding       : 0;
  margin        : 0;
  position: absolute;
  left: 0px;

  transition: all 0.5s ease-in-out;

}

.chordtable {
  // padding: 20px;
  text-align: center;

  td {
    padding-top   : 5px;
    padding-bottom: 5px;
    padding-left  : 15px;
    padding-right : 15px;
  }
}

#route {
  display: flex;
  width  : 100%;
}

// TODO: Move to Editor
#dirty {
  display         : block;
  position        : absolute;
  font-size       : 1em;
  width           : 1em;
  height          : 1em;
  border-radius   : 1em;
  background-color: @accent;
  left            : 5.9rem;
  top             : 3.7rem;
}


// Content role mixins

.list {
  color: hsv(hsvhue(@accent), 0.2, 0.4);
  background-color: @light;
  scrollbar-color : fade(white, 50%) transparent;
}

.chordsheet {
  h1 {
    color: @accent;
  }

  color           : black; // for aside only, is overridden in #chordsheet
  background-color: white;
  scrollbar-color : fade(black, 15%) transparent;
}

// COLOR-SCHEMES
// TODO: Move to variables

// Todo: rename to source-color for example
.source {
  background-color: hsv(hsvhue(@accent), 0.7, 0.8);
  scrollbar-color : fade(black, 15%) transparent;
}

.revision {
  color           : hsv(hsvhue(@accent), 0.4, 0.8);
  background-color: hsv(hsvhue(@accent), 0.7, 0.4);
}

.revisions {
  color           : hsv(hsvhue(@accent), 0.3, 0.7);
  background-color: hsv(hsvhue(@accent), 0.5, 0.2);
}


// Special content
#logo * {
  font-size  : 15em;
  margin     : 0;
  line-height: 0.8em;
}

// .icon {
//   width:32px;
//   height: 32px;
// }


.tags {
  li {
    display         : inline-block;
    font-size       : 0.75em;
    line-height     : 1.7em;
    font-weight     : 600;
    text-transform  : uppercase;
    background-color: @warm;
    color           : white;
    border-radius   : 0.4em;
    padding         : 0 0.5em;
    margin-right    : 0.5em;

    &::before {
      content: none;
    }

    b {
      display                   : inline-block;
      font-weight               : inherit;
      padding                   : 0 0.5em;
      margin                    : 0 -0.5em;
      margin-left               : 0.3em;
      background-color          : @accent;
      border-top-right-radius   : inherit;
      border-bottom-right-radius: inherit;
    }
  }
}


// It should be also possible to override this manually
#chordSheetContent {

  .minwidth( @width-m , {
    column-count: 2;
  });

  .minwidth(@width-l, {
    column-count: 2;

    .span-wrapper {
      column-count: 2;
      column-gap  : inherit;

    }
  });

  .minwidth( @width-xl, {
    column-count: 3;
  });

  column-gap: 100px;
  min-width : 350px;

  p {
    position    : relative;
    break-inside: avoid;
    break-before: avoid;
  }

  span.line {
    break-inside: avoid;
    break-before: avoid;
  }

  #head,
  .span-wrapper {
    column-span: all;
  }

  h3 {
    break-after : avoid;
    break-before: always;
    position    : relative;
  }
}

#chordsheet {
  .maxwidth(@width-s, {
      scroll-snap-type : y proximity;
      scroll-snap-align: start;
      scroll-padding: 20%;
    }

  );


  .chordsheet;

  padding-top   : 2em;
  padding-bottom: 10em;

    .minwidth(@width-m, {
  padding-left  : 6em;
    });

  color: @dull;


  h2,
  h3,
  h4 {
    color: black;
  }

  h1,
  h2 {
    margin-bottom: 1rem;
    font-size    : 2.4em;
    display      : block;
  }

  h1 {
    margin-right: 0.5em;
    margin-left : -0.1em;
  }

  h3 {
    font-size: 1em;
    margin : 0;
    height : 3em;
    line-height : 2em;
    margin-bottom: -2em;

    .minwidth(@width-m, {
        margin-bottom: -4em;

        text-align : right;
        width      : 5em;
        margin-left: -6em;
      });
  }

  // Verse container
  p {
    margin: 1.4em 0;
    scroll-snap-align: start;

  }

  h4 {
    margin-top   : 2em;
    margin-bottom: -0.5em;
  }

  a {
    color: @accent;

    &:hover {
      text-decoration: underline;
    }
  }

  .ref {
    color        : black;
    font-weight  : bold;
    padding-left : 8px;
    margin-left  : -12px;
    border-left  : 4px solid @accent;
    margin-top   : 2em;
    margin-bottom: 2em;
  }

  code {
    display      : inline-block;
    font-family  : 'Input Mono', Courier New, Courier, monospace;
    font-size    : 0.8em;
    font-weight  : 300;
    color        : black;
    padding      : 0 0.5em;
    border-radius: 0.4em;
    .source;
  }

  &.interactive i {
    cursor: pointer;

    &:not(.hasChord):hover {
      border-top: 2px solid @accent;
      margin-top: -2px;
    }
  }

  .line {
    display       : flex;
    flex-direction: row;
    align-items   : flex-end;
    min-height    : 1em;
  }

  .line i {
    font-style : normal;
    font-weight: 400;
    color      : black;

    flex-direction: column;
    display       : flex;
    white-space   : pre-wrap;


    /* currently not in use: Both Viewer and Preview have preprocessors.
    &                      ::before {
      content: attr(data-chord);
      .before();
    }
    */

    .before {
      // aka. Chords.

      color      : @accent;
      font-weight: 600;
      font-style : normal;

      .select(none);
      .noFocusBorder;

      margin-top   : 0;
      margin-right : 0.5em;
      margin-bottom: -0.3em;


      sup {
        vertical-align: 0.4em;
        font-size     : 0.7em;
        letter-spacing: 0.02em;
        padding-left  : 0.1em;
        font-weight   : 700;
      }

      &:focus {
        background-color: hsv(hsvhue(@accent), 0.1, 0.95);
        min-width       : 1.5em;

        &:empty:before {
          content: "\feff"; // Patches height rendering of empty contenteditables
        }
      }

      &.optional {
        color: hsv(hsvhue(@accent), 0.3, 0.7);

        &:before {
          content: '(';
        }

        &:after {
          content: ')';
        }

        &:after,
        &:before {
          font-weight   : 200;
          vertical-align: 0.05em;
        }
      }

    }

    // before aka. chords
  }

  // i

  &.interactive .line i .before {
    // Re-allow chord text selection when editing.
    .select(text);
  }

  li {
    line-height    : 1.6em;
    list-style-type: none;

    &::before {
      content : 'â€“';
      display : inline-block;
      position: relative;
      width   : 0;
      left    : -1.2em;

    }
  }

}

// .chordsheet

aside#list {

  .maxwidth(@width-s, {
      display : none;
      width   : 100%;
      // Gagi
    }

  );

  .minmaxwidth(@width-s, @width-l, {
      position        : absolute;
      left           : -200px;
      padding-right: 20px;
      height: 100%;

    }

  );
}

// #editSource {
//   * {
//     position: absolute;
//     right   :0;
//     top     :0;
//     width   : 300px;
//   }
// }


.content {
  box-sizing: border-box;
  // min-height: 100vh;

  .scroll;

  width  : 100%;
  .maxwidth( @width-s, {
    height: auto;
  });
  padding: 1em 2em 1em 2em;

  h1:first-child,
  h2:first-child {
    margin-top: 0;

    &+h2 {
      margin-top: 0;
    }
  }
}

textarea {
  font-family: 'Input Mono', Courier New, Courier, monospace;
  font-weight: 300;
  font-size  : 0.9em;
  width      : inherit;
  cursor     : text;

  .noFocusBorder;
}

.noFocusBorder {
  &:focus {
    outline: none;
  }

  &::selection {
    color           : hsv(hsvhue(@accent), 0.4, 0.8);
    background-color: hsva(hsvhue(@accent), 0.3, 0.3, 1.0);
  }

  &::-moz-selection {
    color           : hsv(hsvhue(@accent), 0.8, 0.3);
    background-color: hsv(hsvhue(@accent), 0.5, 0.9);
  }
}

hr {
  border-style : solid;
  margin-bottom: 1em;
}

.label {
  font-weight     : bold;
  font-size       : 1.2em;
  text-transform  : uppercase;
  background-color: inherit;

  display : block;
  padding : 0.2em;
  position: fixed;
  bottom  : 1em;
}

// CSS-wise transparent container to satisfy react.
.container {
  display       : inherit;
  flex-direction: inherit;
  width         : inherit;
  min-height    : inherit;
  padding       : 0;
  margin        : 0;
  height        : auto;
}

@import '../imports/ui/editor.import.less';

@media print {

  aside,
  #transposer,
  .tags {
    display: none;
  }

  #body {
    font-size: 12pt;
    width    : 210mm;
  }

  #chordsheet {
    columns: 2;
  }

  #head,
  h1,
  h2 {
    column-span: all;
  }
}

.select(@mode: none; ) {
  -webkit-touch-callout: @mode;
  /* iOS Safari */
  -webkit-user-select: @mode;
  /* Safari */
  -khtml-user-select: @mode;
  /* Konqueror HTML */
  -moz-user-select: @mode;
  /* Firefox */
  -ms-user-select: @mode;
  /* Internet Explorer/Edge */
  user-select: @mode;
  /* Non-prefixed version, currently
                                  supported by Chrome and Opera */
}

.scroll {
  overflow                  : auto;
  -webkit-overflow-scrolling: touch;
  scrollbar-width           : thin;
}

// Responsive
.show-s,
.show-m,
.show-l,
.show-xl {
  display:  none;
}

.hide-s,
.hide-m,
.hide-l,
.hide-xl {
  display: initial;
}

// Show up to x
.minwidth(@width-s, {
  .show-s {
    display: initial
  }
});

.minwidth(@width-m, {
  .show-m {
    display: initial
  }
});

.minwidth(@width-l, {
  .show-l {
    display: initial
  }
});

.minwidth(@width-xl, {
  .show-xl {
    display: initial
  }
});

// Hide below x
.maxwidth(@width-s, {
  .hide-s {
    display: none
  }
});

.maxwidth(@width-m, {
  .hide-m {
    display: none
  }
});

.maxwidth(@width-l, {
  .hide-l {
    display: none
  }
});

.maxwidth(@width-xl, {
  .hide-xl {
    display: none
  }
});

// Header 
@import 'mobileheader.import.less';

#hoeliDebug {
  position: fixed;
  left: 50px;
  top: 50px;
  pointer-events: none;
  background-color: white;
  border: 2px solid black;
  .touchdevice({
    background-color: yellow;
  });
}

.contents {
  display: contents;
}